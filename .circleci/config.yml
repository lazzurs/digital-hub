defaults: &defaults
  working_directory: ~/digital-hub
  docker:
    - image: mojdigitalstudio/circleci-build-container

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          key: dependency-cache-{{ checksum "moj-node/package-lock.json" }}
      - run:
          name: Build node frontend container
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                cd moj-node && \
                BUILD_NUMBER="$CIRCLE_BUILD_NUM" \
                GIT_REF="$CIRCLE_SHA1" \
                GIT_DATE="$(git log --format=%cd -n1 --date=iso $CIRCLE_SHA1)" \
                make build
            else
                cd moj-node && make build
            fi
      - save_cache:
          key: dependency-cache-{{ checksum "moj-node/package-lock.json" }}
          paths:
            - ./moj-node/node_modules
      - run:
          name: push moj-node to docker
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                cd moj-node && make push
            fi
      - add_ssh_keys:
          fingerprints:
            - "0a:04:a1:27:17:3e:3d:8a:20:91:79:a1:9e:af:85:6c"
      - run:
          name: tag build
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                git config user.name "Circle CI"
                git config user.email "circle@circleci.com"
                git tag -a "$(date '+%d-%m-%Y')-$CIRCLE_BUILD_NUM" $CIRCLE_SHA1 -m "$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=%B)"
                git push origin "$(date '+%d-%m-%Y')-$CIRCLE_BUILD_NUM"
            fi
      - run:
          name: Save build number (for deployment)
          command: |
            CIRCLE_BUILD_NUM_DOCKER=${CIRCLE_BUILD_NUM}
            mkdir -p /tmp/workspace/docker-build
            cd /tmp/workspace/docker-build
            echo ${CIRCLE_BUILD_NUM_DOCKER} > docker-build-number.txt
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - docker-build

  build_cms:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          key: moj-be/vendor-{{ checksum "moj-be/composer.lock" }}
      - run:
          name: Build backend container
          command: cd moj-be && make build
      - save_cache:
          key: moj-be/vendor-{{ checksum "moj-be/composer.lock" }}
          paths:
            - ./moj-be/vendor
      - run:
          name: push be to docker
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                cd moj-be && make push
            fi

  build_matomo:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build matomo
          command: |
            cd moj-matomo && \
            make build-deps && \
            make build && \
            make clean
      - run:
          name: Push moj-matomo to repository
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                cd moj-matomo && make push
            fi

  run_e2e_test:
    docker:
      - image: circleci/node:10.15.3-browsers
    working_directory: /home/circleci/app
    steps:
      - checkout
      - run:
          name: Update npm
          command: "sudo npm install -g npm@latest"
      - restore_cache:
          key: dependency-cache-{{ checksum "moj-node/package-lock.json" }}
      - run:
          name: Install Dependencies
          command: cd moj-node && npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "moj-node/package-lock.json" }}
          paths:
            - moj-node/node_modules
      - run:
          name: E2E test
          command: |
            cd moj-node && \
            npm run build && \
            BUILD_NUMBER="$CIRCLE_BUILD_NUM" \
            GIT_REF="$CIRCLE_SHA1" \
            GIT_DATE="$(git log --format=%cd -n1 --date=iso $CIRCLE_SHA1)" \
            npm run record-build-info && \
            APP_NAME="HMP Local" \
            NODE_ENV=production \
            MATOMO_URL="foo.bar" \
            MATOMO_TOKEN="foobar" \
            MATOMO_API_URI="http://hub-matomo" \
            ENABLE_PRISON_SWITCH="true" \
            HUB_API_ENDPOINT="https://drupal.digital-hub-stage.hmpps.dsd.io" \
            ELASTICSEARCH_ENDPOINT="UNSET" \
            ESTABLISHMENT_NAME="berwyn" \
            npm run test:e2e:run
      - store_artifacts:
          path: ./moj-node/cypress/videos
      - store_artifacts:
          path: ./moj-node/cypress/screenshots

  deploy_dev:
    machine:
      enabled: true
    working_directory: ~/digital-hub
    steps:
      - attach_workspace: &attach_workspace
          at: /tmp/workspace
      - add_ssh_keys:
          fingerprints:
            - "36:39:b2:8b:1a:6e:03:37:69:91:58:c4:fe:81:fe:d9"
      - run:
          name: Deploy to Development
          command: |
            export CIRCLE_BUILD_NUM_DOCKER="$(cat /tmp/workspace/docker-build/docker-build-number.txt)" && \
            ssh -t ciuser@pfs-management-bastion-1.uksouth.cloudapp.azure.com ssh -t ciuser@pfs3.pfs-management.com "sudo /etc/docker-decomposed-secrets.sh -v build-${CIRCLE_BUILD_NUM_DOCKER}"

  deploy_stage:
    machine:
      enabled: true
    working_directory: ~/digital-hub
    steps:
      - attach_workspace: &attach_workspace
          at: /tmp/workspace
      - add_ssh_keys:
          fingerprints:
            - "36:39:b2:8b:1a:6e:03:37:69:91:58:c4:fe:81:fe:d9"
      - run:
          name: Deploy to Staging
          command: |
            export CIRCLE_BUILD_NUM_DOCKER="$(cat /tmp/workspace/docker-build/docker-build-number.txt)" && \
            ssh -t ciuser@pfs-management-bastion-1.uksouth.cloudapp.azure.com ssh -t ciuser@pfs3.pfs-management.com "sudo /etc/docker-decomposed-secrets.sh -v build-${CIRCLE_BUILD_NUM_DOCKER}"

  deploy_prod:
    machine:
      enabled: true
    working_directory: ~/digital-hub
    steps:
      - attach_workspace: &attach_workspace
          at: /tmp/workspace
      - add_ssh_keys:
          fingerprints:
            - "36:39:b2:8b:1a:6e:03:37:69:91:58:c4:fe:81:fe:d9"
      - run:
          name: Deploy to Production
          command: |
            export CIRCLE_BUILD_NUM_DOCKER="$(cat /tmp/workspace/docker-build/docker-build-number.txt)" && \
            ssh -t ciuser@pfs-management-bastion-1.uksouth.cloudapp.azure.com ssh -t ciuser@pfs3.pfs-management.com "sudo /etc/docker-decomposed-secrets.sh -v build-${CIRCLE_BUILD_NUM_DOCKER}" && \
            ssh -t ciuser@pfs-management-bastion-1.uksouth.cloudapp.azure.com ssh -t ciuser@pfs3.pfs-management.com "sudo /etc/docker-decomposed-secrets.sh -v build-${CIRCLE_BUILD_NUM_DOCKER}"

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - run_e2e_test:
          requires:
            - build
      - build_cms:
          requires:
            - hold
      - build_matomo:
          requires:
            - hold
      - hold:
          type: approval
      - deploy_dev:
          requires:
            - run_e2e_test
          filters:
            branches:
              only: master
      - deploy_stage:
          type: approval
          requires:
            - deploy_dev
          filters:
            branches:
              only: master
      - deploy_prod:
          type: approval
          requires:
            - deploy_stage
          filters:
            branches:
              only: master
