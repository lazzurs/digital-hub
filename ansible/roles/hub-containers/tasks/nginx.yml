- set_fact:
    nginx_client_max_body_size: 1024m
    hub_nginx_upstream:
      name: "{{ hub_site.upstream_name }}"
      servers:
        - "localhost:{{ hub_site.upstream_port }}"
    hub_nginx_vhost_80:
      listen: 80
      server_name: "{{ hub_site.domain }}"
      filename: "{{ hub_site.domain }}_80.conf"
      extra_parameters: |
        return 301 https://$host$request_uri;
    hub_nginx_vhost_443:
      listen: "443 ssl"
      server_name: "{{ hub_site.domain }}"
      extra_parameters: |
        ignore_invalid_headers off;
        location / {
          proxy_pass http://{{ hub_site.upstream_name }};
          proxy_set_header   Host              $host;
          proxy_set_header   X-Real-IP         $remote_addr;
          proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Proto $scheme;
        }
        ssl_certificate /etc/letsencrypt/live/{{ hub_site.domain }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ hub_site.domain }}/privkey.pem;

- set_fact:
    nginx_upstreams: "{{ nginx_upstreams + [hub_nginx_upstream] }}"
    nginx_vhosts: "{{ nginx_vhosts + [hub_nginx_vhost_80] }}"
    letsencrypt_domains: "{{ letsencrypt_domains + [hub_site.domain] }}"

# Will need to run ansible twice on first build
# The first run should get the cert via letsencrypt
# and then the second run will enable the reverse proxy
- name: check certificate exists for {{ hub_site.domain }}
  stat:
    path: /etc/letsencrypt/live/{{ hub_site.domain }}/fullchain.pem
  register: letsencrypt_cert_exists
- set_fact:
    nginx_vhosts: "{{ nginx_vhosts + [hub_nginx_vhost_443] }}"
  when: letsencrypt_cert_exists.stat.exists
